{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","data","selectedGoods","goods","this","length","output","i","substring","word","arr","push","index","indexOf","splice","className","createSelected","type","onClick","setState","map","good","check","addWord","removeWord","React","Component","ReactDOM","render","document","getElementById"],"mappings":"8OAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,E,4MACJC,MAAQ,CACNC,KAAMH,EACNI,cAAe,I,oDAGjB,WACE,IAAMC,EAAkBC,KAAKJ,MAAME,cAC3BG,EAAWD,KAAKJ,MAAME,cAAtBG,OAER,GAAe,IAAXA,EACF,MAAO,cAGT,GAAe,IAAXA,EACF,MAAM,GAAN,OAAUF,EAAM,GAAhB,gBAKF,IAFA,IAAIG,EAAS,GAEJC,EAAI,EAAGA,EAAIF,EAAS,EAAGE,GAAK,EACnCD,GAAM,UAAOH,EAAMI,GAAb,OAGR,MAAM,GAAN,OAAUD,EAAOE,UAAU,EAAGF,EAAOD,OAAS,GAA9C,gBAAwDF,EAAMA,EAAME,OAAS,GAA7E,mB,qBAGF,SAAQI,GACN,IAAMC,EAAgBN,KAAKJ,MAAME,cAIjC,OAFAQ,EAAIC,KAAKF,GAEFC,I,wBAGT,SAAWD,GACT,IAAMC,EAAgBN,KAAKJ,MAAME,cAC3BU,EAAgBF,EAAIG,QAAQJ,GAMlC,OAJIG,GAAS,GACXF,EAAII,OAAOF,EAAO,GAGbF,I,mBAGT,SAAMD,GAIJ,OAHsBL,KAAKJ,MAAME,cACPW,QAAQJ,IAErB,I,oBAOf,WAAU,IAAD,OACP,OACE,sBAAKM,UAAU,MAAf,UACE,sBAAKA,UAAU,oBAAf,UACE,mBAAGA,UAAU,2BAAb,4BAGA,mBAAGA,UAAU,0BAAb,SACGX,KAAKY,mBAER,wBACEC,KAAK,SACLF,UAAU,2BACVG,QAAS,kBAAM,EAAKC,SAAS,CAAEjB,cAAe,MAHhD,kBASF,qBAAKa,UAAU,oBAAf,SACE,oBAAIA,UAAU,0BAAd,SACGX,KAAKJ,MAAMC,KAAKmB,KAAI,SAAAC,GAAI,OACvB,qBAAIN,UAAU,gCAAd,oBACMM,IACF,EAAKC,MAAMD,IACX,wBACEJ,KAAK,SACLF,UAAU,qCACVG,QACE,kBAAM,EAAKC,SAAS,CAAEjB,cAAe,EAAKqB,QAAQF,MAJtD,iBAUD,EAAKC,MAAMD,IACV,wBACEJ,KAAK,SACLF,UAAU,wCACVG,QACE,kBAAM,EAAKC,SAAS,CAAEjB,cAAe,EAAKsB,WAAWH,MAJzD,qC,GA7FAI,IAAMC,WAgHT3B,IC7Hf4B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.454db3c2.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    data: goodsFromServer,\n    selectedGoods: [],\n  };\n\n  createSelected() {\n    const goods: string[] = this.state.selectedGoods;\n    const { length } = this.state.selectedGoods;\n\n    if (length === 0) {\n      return 'No Selected';\n    }\n\n    if (length === 1) {\n      return `${goods[0]} is selected`;\n    }\n\n    let output = '';\n\n    for (let i = 0; i < length - 1; i += 1) {\n      output += `${goods[i]} , `;\n    }\n\n    return `${output.substring(0, output.length - 2)} and ${goods[goods.length - 1]} are selected`;\n  }\n\n  addWord(word: string) {\n    const arr: string[] = this.state.selectedGoods;\n\n    arr.push(word);\n\n    return arr;\n  }\n\n  removeWord(word: string) {\n    const arr: string[] = this.state.selectedGoods;\n    const index: number = arr.indexOf(word);\n\n    if (index >= 0) {\n      arr.splice(index, 1);\n    }\n\n    return arr;\n  }\n\n  check(word: string) {\n    const arr: string[] = this.state.selectedGoods;\n    const index: number = arr.indexOf(word);\n\n    if (index >= 0) {\n      return true;\n    }\n\n    return false;\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <div className=\"app__selectedList\">\n          <p className=\"app__selectedList__title\">\n            Selected good:\n          </p>\n          <p className=\"app__selectedList__list\">\n            {this.createSelected()}\n          </p>\n          <button\n            type=\"button\"\n            className=\"app__selectedList__clear\"\n            onClick={() => this.setState({ selectedGoods: [] })}\n          >\n            X\n          </button>\n        </div>\n\n        <div className=\"app__selectedForm\">\n          <ul className=\"app__selectedForm__list\">\n            {this.state.data.map(good => (\n              <li className=\"app__selectedForm__list__item\">\n                {`${good}`}\n                {!this.check(good) && (\n                  <button\n                    type=\"button\"\n                    className=\"app__selectedForm__list__item__add\"\n                    onClick={\n                      () => this.setState({ selectedGoods: this.addWord(good) })\n                    }\n                  >\n                    Add\n                  </button>\n                )}\n                {this.check(good) && (\n                  <button\n                    type=\"button\"\n                    className=\"app__selectedForm__list__item__remove\"\n                    onClick={\n                      () => this.setState({ selectedGoods: this.removeWord(good) })\n                    }\n                  >\n                    Remove\n                  </button>\n                )}\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}