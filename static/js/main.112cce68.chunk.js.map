{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","data","selectedGoods","goods","this","length","goodsOut","pop","output","join","word","arr","push","index","findIndex","el","splice","includes","className","createSelected","checkAnyGood","type","onClick","setState","map","good","checkSameGood","addWord","removeWord","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qPAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,E,4MACJC,MAAQ,CACNC,KAAK,GAAD,OAAMH,GACVI,cAAe,CAAC,Q,oDAGlB,WACE,IAAMC,EAAkBC,KAAKJ,MAAME,cAC3BG,EAAWD,KAAKJ,MAAME,cAAtBG,OACFC,EAAQ,YAAOH,GAErBG,EAASC,MAET,IAAMC,EAASF,EAASG,KAAK,MAE7B,OAAQJ,GACN,KAAK,EACH,MAAO,cACT,KAAK,EACH,MAAM,GAAN,OAAUF,EAAM,GAAhB,gBACF,QAEE,MAAM,GAAN,OAAUK,EAAV,gBAAwBL,EAAMA,EAAME,OAAS,GAA7C,oB,qBAIN,SAAQK,GACN,IAAMC,EAAa,YAAOP,KAAKJ,MAAME,eAIrC,OAFAS,EAAIC,KAAKF,GAEFC,I,wBAGT,SAAWD,GACT,IAAMC,EAAa,YAAOP,KAAKJ,MAAME,eAC/BW,EAAgBF,EAAIG,WAAW,SAAAC,GAAE,OAAIA,IAAOL,KAIlD,OAFAC,EAAIK,OAAOH,EAAO,GAEXF,I,2BAGT,SAAcD,GAGZ,QAFmB,YAAON,KAAKJ,MAAME,eAE7Be,SAASP,K,0BAOnB,WACE,OAAIN,KAAKJ,MAAME,cAAcG,OAAS,I,oBAOxC,WAAU,IAAD,OACP,OACE,sBAAKa,UAAU,MAAf,UACE,sBAAKA,UAAU,oBAAf,UACE,mBAAGA,UAAU,2BAAb,4BAGA,mBAAGA,UAAU,0BAAb,SACGd,KAAKe,oBAENf,KAAKgB,gBACL,wBACEC,KAAK,SACLH,UAAU,yBAFZ,kCAODd,KAAKgB,gBACJ,wBACEC,KAAK,SACLH,UAAU,2BACVI,QAAS,kBAAM,EAAKC,SAAS,CAAErB,cAAe,MAHhD,kBAUJ,qBAAKgB,UAAU,oBAAf,SACE,oBAAIA,UAAU,0BAAd,SACGd,KAAKJ,MAAMC,KAAKuB,KAAI,SAAAC,GAAI,OACvB,qBAAIP,UAAU,gCAAd,oBACMO,IACF,EAAKC,cAAcD,IACnB,wBACEJ,KAAK,SACLH,UAAU,qCACVI,QACE,kBAAM,EAAKC,SAAS,CAAErB,cAAe,EAAKyB,QAAQF,MAJtD,iBAUD,EAAKC,cAAcD,IAClB,wBACEJ,KAAK,SACLH,UAAU,wCACVI,QACE,kBAAM,EAAKC,SAAS,CAAErB,cAAe,EAAK0B,WAAWH,MAJzD,qC,GA3GAI,IAAMC,WA8HT/B,IC3IfgC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.112cce68.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    data: [...goodsFromServer],\n    selectedGoods: ['Jam'],\n  };\n\n  createSelected() {\n    const goods: string[] = this.state.selectedGoods;\n    const { length } = this.state.selectedGoods;\n    const goodsOut = [...goods];\n\n    goodsOut.pop();\n\n    const output = goodsOut.join(', ');\n\n    switch (length) {\n      case 0:\n        return 'No Selected';\n      case 1:\n        return `${goods[0]} is selected`;\n      default:\n\n        return `${output} and ${goods[goods.length - 1]} are selected`;\n    }\n  }\n\n  addWord(word: string) {\n    const arr: string[] = [...this.state.selectedGoods];\n\n    arr.push(word);\n\n    return arr;\n  }\n\n  removeWord(word: string) {\n    const arr: string[] = [...this.state.selectedGoods];\n    const index: number = arr.findIndex((el => el === word));\n\n    arr.splice(index, 1);\n\n    return arr;\n  }\n\n  checkSameGood(word: string) {\n    const arr: string[] = [...this.state.selectedGoods];\n\n    if (arr.includes(word)) {\n      return true;\n    }\n\n    return false;\n  }\n\n  checkAnyGood() {\n    if (this.state.selectedGoods.length > 0) {\n      return true;\n    }\n\n    return false;\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <div className=\"app__selectedList\">\n          <p className=\"app__selectedList__title\">\n            Selected good:\n          </p>\n          <p className=\"app__selectedList__list\">\n            {this.createSelected()}\n          </p>\n          {!this.checkAnyGood() && (\n            <button\n              type=\"button\"\n              className=\"app__selectedList__non\"\n            >\n              All that you want...\n            </button>\n          )}\n          {this.checkAnyGood() && (\n            <button\n              type=\"button\"\n              className=\"app__selectedList__clear\"\n              onClick={() => this.setState({ selectedGoods: [] })}\n            >\n              X\n            </button>\n          )}\n        </div>\n\n        <div className=\"app__selectedForm\">\n          <ul className=\"app__selectedForm__list\">\n            {this.state.data.map(good => (\n              <li className=\"app__selectedForm__list__item\">\n                {`${good}`}\n                {!this.checkSameGood(good) && (\n                  <button\n                    type=\"button\"\n                    className=\"app__selectedForm__list__item__add\"\n                    onClick={\n                      () => this.setState({ selectedGoods: this.addWord(good) })\n                    }\n                  >\n                    Add\n                  </button>\n                )}\n                {this.checkSameGood(good) && (\n                  <button\n                    type=\"button\"\n                    className=\"app__selectedForm__list__item__remove\"\n                    onClick={\n                      () => this.setState({ selectedGoods: this.removeWord(good) })\n                    }\n                  >\n                    Remove\n                  </button>\n                )}\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}