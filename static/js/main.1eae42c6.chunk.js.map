{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","data","selectedGoods","goods","this","length","goodsOut","endEl","pop","output","join","word","setState","prevState","filter","good","includes","className","createSelected","checkAnyGood","type","onClick","map","checkSameGood","removeWord","addWord","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qPAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOIC,E,4MACJC,MAAQ,CACNC,KAAK,GAAD,OAAMH,GACVI,cAAe,CAAC,Q,oDAGlB,WACE,IAAMC,EAAkBC,KAAKJ,MAAME,cAC3BG,EAAWD,KAAKJ,MAAME,cAAtBG,OACFC,EAAQ,YAAOH,GACfI,EAAQD,EAASE,MAEjBC,EAASH,EAASI,KAAK,MAE7B,OAAQL,GACN,KAAK,EACH,MAAO,cAET,KAAK,EACH,MAAM,GAAN,OAAUF,EAAM,GAAhB,gBAEF,QAEE,MAAM,GAAN,OAAUM,EAAV,gBAAwBF,EAAxB,oB,qBAIN,SAAQI,GACNP,KAAKQ,UAAS,SAACC,GAAD,MAAgB,CAC5BX,cAAc,GAAD,mBAAMW,EAAUX,eAAhB,CAA+BS,U,wBAIhD,SAAWA,GACTP,KAAKQ,UAAS,SAACC,GAAD,MAAgB,CAC5BX,cAAc,YAAKW,EAAUX,cAAcY,QAAO,SAAAC,GAAI,OAAIA,IAASJ,Y,2BAIvE,SAAcA,GACZ,OAAQP,KAAKJ,MAAME,cAAcc,SAASL,KAAU,I,0BAGtD,WACE,OAAQP,KAAKJ,MAAME,cAAcG,OAAS,IAAM,I,oBAGlD,WAAU,IAAD,OACP,OACE,sBAAKY,UAAU,MAAf,UACE,sBAAKA,UAAU,oBAAf,UACE,mBAAGA,UAAU,2BAAb,4BAGA,mBAAGA,UAAU,0BAAb,SACGb,KAAKc,oBAENd,KAAKe,gBACL,wBACEC,KAAK,SACLH,UAAU,yBAFZ,kCAODb,KAAKe,gBACJ,wBACEC,KAAK,SACLH,UAAU,2BACVI,QAAS,kBAAM,EAAKT,SAAS,CAAEV,cAAe,MAHhD,kBAUJ,qBAAKe,UAAU,oBAAf,SACE,oBAAIA,UAAU,0BAAd,SACGb,KAAKJ,MAAMC,KAAKqB,KAAI,SAAAP,GAAI,OACvB,qBAAIE,UAAU,gCAAd,oBACMF,GACD,EAAKQ,cAAcR,GAUlB,wBACEK,KAAK,SACLH,UAAU,wCACVI,QAAS,kBAAM,EAAKG,WAAWT,IAHjC,oBATF,wBACEK,KAAK,SACLH,UAAU,qCACVI,QAAS,kBAAM,EAAKI,QAAQV,IAH9B,kC,GAlFAW,IAAMC,WA4GT5B,IC7Hf6B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1eae42c6.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGoods: string[],\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    data: [...goodsFromServer],\n    selectedGoods: ['Jam'],\n  };\n\n  createSelected() {\n    const goods: string[] = this.state.selectedGoods;\n    const { length } = this.state.selectedGoods;\n    const goodsOut = [...goods];\n    const endEl = goodsOut.pop();\n\n    const output = goodsOut.join(', ');\n\n    switch (length) {\n      case 0:\n        return 'No Selected';\n\n      case 1:\n        return `${goods[0]} is selected`;\n\n      default:\n\n        return `${output} and ${endEl} are selected`;\n    }\n  }\n\n  addWord(word: string) {\n    this.setState((prevState) => ({\n      selectedGoods: [...prevState.selectedGoods, word],\n    }));\n  }\n\n  removeWord(word: string) {\n    this.setState((prevState) => ({\n      selectedGoods: [...prevState.selectedGoods.filter(good => good !== word)],\n    }));\n  }\n\n  checkSameGood(word: string) {\n    return (this.state.selectedGoods.includes(word)) || false;\n  }\n\n  checkAnyGood() {\n    return (this.state.selectedGoods.length > 0) || false;\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <div className=\"app__selectedList\">\n          <p className=\"app__selectedList__title\">\n            Selected good:\n          </p>\n          <p className=\"app__selectedList__list\">\n            {this.createSelected()}\n          </p>\n          {!this.checkAnyGood() && (\n            <button\n              type=\"button\"\n              className=\"app__selectedList__non\"\n            >\n              All that you want...\n            </button>\n          )}\n          {this.checkAnyGood() && (\n            <button\n              type=\"button\"\n              className=\"app__selectedList__clear\"\n              onClick={() => this.setState({ selectedGoods: [] })}\n            >\n              X\n            </button>\n          )}\n        </div>\n\n        <div className=\"app__selectedForm\">\n          <ul className=\"app__selectedForm__list\">\n            {this.state.data.map(good => (\n              <li className=\"app__selectedForm__list__item\">\n                {`${good}`}\n                {(!this.checkSameGood(good)) ? (\n                  <button\n                    type=\"button\"\n                    className=\"app__selectedForm__list__item__add\"\n                    onClick={() => this.addWord(good)}\n                  >\n                    Add\n                  </button>\n                )\n                  : (\n                    <button\n                      type=\"button\"\n                      className=\"app__selectedForm__list__item__remove\"\n                      onClick={() => this.removeWord(good)}\n                    >\n                      Remove\n                    </button>\n                  )}\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}